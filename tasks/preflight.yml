---
- name: Preflight > init checks
  set_fact:
    prometheus_checks:
      - distro: false
      - blackbox_iface_node_data: false
      - blackbox_iface_node_admin: false
      - blackbox_iface_admin: false

- name: Preflight > check distro
  set_fact:
    prometheus_checks: "{{ prometheus_checks | combine({'distro': true}) }}"
  when:
    - ansible_distribution == item.distro
    - ansible_distribution_major_version == item.version | string
  with_items: "{{prometheus_valid_distros}}"

- name: Preflight > check blackbox interface on nodes (darta)
  set_fact:
    prometheus_checks: "{{ prometheus_checks | combine({'blackbox_iface_node_data': true}) }}"
  when:
    - ('ansible_' + prometheus_blackbox_node_data_iface) in hostvars[item]
  with_items: "{{ groups[prometheus_monitored_group] }}"

- name: Preflight > check blackbox interface on nodes (admin)
  set_fact:
    prometheus_checks: "{{ prometheus_checks | combine({'blackbox_iface_node_admin': true}) }}"
  when:
    - ('ansible_' + prometheus_blackbox_node_admin_iface) in hostvars[item]
  with_items: "{{ groups[prometheus_monitored_group] }}"

- name: Preflight > check blackbox interface on admin
  set_fact:
    prometheus_checks: "{{ prometheus_checks | combine({'blackbox_iface_admin': true}) }}"
  when:
    - ('ansible_' + prometheus_blackbox_admin_iface) in hostvars[item]
  with_items: "{{ groups[prometheus_admin_group] }}"

- name: Check that the somefile.conf exists
  stat:
    path: "/etc/oio/sds/{{ prometheus_openio_namespace }}/inventory.yml"
  register: inventory_file
  with_items: "{{ groups[prometheus_monitored_group] }}"

- name: Preflight > check that all nodes have an inventory.yml file
  set_fact:
    prometheus_checks: "{{ prometheus_checks | combine({'inventory_file': true})}}"
  when:
    - (prometheus_monitored_group not in group_names) or (prometheus_monitored_group in group_names and inventory_file.stat.exists)

# Keep this part at the end
- name: Fail on failed checks
  fail:
    msg: "Check failed: {{ item.key }}"
  when: not item.value
  with_dict: "{{ prometheus_checks }}"
...
