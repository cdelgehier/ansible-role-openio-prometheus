---
- name: "Create additional directories"
  file:
    path: "{{ dirname }}"
    state: directory
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    mode: 0755
  with_items:
    - "{{ prometheus_conf_dir }}/alerts"
    - "{{ prometheus_conf_dir }}/rules"
    - "{{ prometheus_conf_dir }}/targets"
    - "{{ prometheus_storage_path }}"
  loop_control:
    loop_var: dirname
  register: _prometheus_dirs

- name: "Setup recording rules"
  template:
    src: record.rules.j2
    dest: "{{ prometheus_conf_dir }}/rules/{{ item.name }}.rules"
    validate: "{{ promtool_check_rules_cmd }} %s"
  with_items:
    - "{{ prometheus_aggregation_rules }}"
  register: _prometheus_aggr

- name: "Setup alerting rules"
  copy:
    content: "{{ lookup('file', 'alert_rules.yml') | format_alerts }}"
    dest: "/etc/prometheus/alerts/default.rules"
  register: _prometheus_alerts

- name: "Setup prometheus config yml"
  template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_conf_dir }}/prometheus.yml"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
    validate: "{{ promtool_check_config_cmd }} %s"
  register: _prometheus_conf

- name: "Create prometheus run options"
  set_fact:
    prometheus_run_opts:
      config.file: "{{ prometheus_conf_dir }}/prometheus.yml"
      storage.tsdb.path: "{{ prometheus_storage_path }}"
      storage.tsdb.retention: "{{ prometheus_storage_retention }}"
      web.enable-lifecycle: ""
      web.listen-address: "{{ prometheus_bind_address }}:{{ prometheus_bind_port }}"
      web.external-url: "http://{{ prometheus_bind_address }}:{{ prometheus_bind_port }}"
      log.level: "{{ prometheus_loglevel }}"

- name: Save Prometheus run options
  template:
    src: prometheus_opts.j2
    dest: "/etc/default/prometheus"
    owner: "{{ prometheus_user }}"
    group: "{{ prometheus_group }}"
  register: _prometheus_defaults
...
